Dump of assembler code for function main:
   0x0000000000400739 <+0>:	push   %rbp
   0x000000000040073a <+1>:	mov    %rsp,%rbp
   0x000000000040073d <+4>:	push   %rbx
   0x000000000040073e <+5>:	sub    $0x48,%rsp
   0x0000000000400742 <+9>:	mov    %edi,-0x44(%rbp)
   0x0000000000400745 <+12>:	mov    %rsi,-0x50(%rbp)
   0x0000000000400749 <+16>:	mov    %fs:0x28,%rax
   0x0000000000400752 <+25>:	mov    %rax,-0x18(%rbp)
   0x0000000000400756 <+29>:	xor    %eax,%eax
   0x0000000000400758 <+31>:	movq   $0x0,-0x30(%rbp)
   0x0000000000400760 <+39>:	movq   $0x0,-0x20(%rbp)
   0x0000000000400768 <+47>:	movl   $0x0,-0x34(%rbp)
   0x000000000040076f <+54>:	mov    $0x4008c4,%edi
   0x0000000000400774 <+59>:	callq  0x400580 <puts@plt>
   0x0000000000400779 <+64>:	lea    -0x30(%rbp),%rax
   0x000000000040077d <+68>:	mov    $0x6,%edx
   0x0000000000400782 <+73>:	mov    %rax,%rsi
   0x0000000000400785 <+76>:	mov    $0x0,%edi
   0x000000000040078a <+81>:	mov    $0x0,%eax
   0x000000000040078f <+86>:	callq  0x4005a0 <read@plt>
   0x0000000000400794 <+91>:	nop
   0x0000000000400795 <+92>:	callq  0x4005c0 <getchar@plt>
   0x000000000040079a <+97>:	mov    %al,-0x35(%rbp)
   0x000000000040079d <+100>:	cmpb   $0xa,-0x35(%rbp)
   0x00000000004007a1 <+104>:	je     0x4007a9 <main+112>
   0x00000000004007a3 <+106>:	cmpb   $0xff,-0x35(%rbp)
   0x00000000004007a7 <+110>:	jne    0x400795 <main+92>
   0x00000000004007a9 <+112>:	lea    -0x30(%rbp),%rcx
   0x00000000004007ad <+116>:	lea    -0x20(%rbp),%rax
   0x00000000004007b1 <+120>:	mov    $0x3,%edx
   0x00000000004007b6 <+125>:	mov    %rcx,%rsi
   0x00000000004007b9 <+128>:	mov    %rax,%rdi
   0x00000000004007bc <+131>:	callq  0x4005e0 <memcpy@plt>
   0x00000000004007c1 <+136>:	lea    -0x20(%rbp),%rax
   0x00000000004007c5 <+140>:	mov    %rax,%rsi
   0x00000000004007c8 <+143>:	mov    $0x4008de,%edi
   0x00000000004007cd <+148>:	callq  0x4006dd <a_strcmp>
   0x00000000004007d2 <+153>:	mov    %eax,-0x34(%rbp)
   0x00000000004007d5 <+156>:	cmpl   $0x0,-0x34(%rbp)
   0x00000000004007d9 <+160>:	jne    0x40080f <main+214>
   0x00000000004007db <+162>:	lea    -0x30(%rbp),%rax
   0x00000000004007df <+166>:	add    $0x3,%rax
   0x00000000004007e3 <+170>:	mov    %rax,%rsi
   0x00000000004007e6 <+173>:	mov    $0x4008e2,%edi
   0x00000000004007eb <+178>:	callq  0x4006dd <a_strcmp>
   0x00000000004007f0 <+183>:	mov    %eax,-0x34(%rbp)
   0x00000000004007f3 <+186>:	cmpl   $0x0,-0x34(%rbp)
   0x00000000004007f7 <+190>:	jne    0x400819 <main+224>
   0x00000000004007f9 <+192>:	mov    $0x4008e6,%edi
   0x00000000004007fe <+197>:	callq  0x400580 <puts@plt>
   0x0000000000400803 <+202>:	mov    $0xb,%edi
   0x0000000000400808 <+207>:	callq  0x400570 <raise@plt>
   0x000000000040080d <+212>:	jmp    0x400819 <main+224>
   0x000000000040080f <+214>:	mov    $0x4008f8,%edi
   0x0000000000400814 <+219>:	callq  0x400580 <puts@plt>
   0x0000000000400819 <+224>:	mov    $0x0,%eax
   0x000000000040081e <+229>:	mov    -0x18(%rbp),%rbx
   0x0000000000400822 <+233>:	xor    %fs:0x28,%rbx
   0x000000000040082b <+242>:	je     0x400832 <main+249>
   0x000000000040082d <+244>:	callq  0x400590 <__stack_chk_fail@plt>
   0x0000000000400832 <+249>:	add    $0x48,%rsp
   0x0000000000400836 <+253>:	pop    %rbx
   0x0000000000400837 <+254>:	pop    %rbp
   0x0000000000400838 <+255>:	retq   
End of assembler dump.